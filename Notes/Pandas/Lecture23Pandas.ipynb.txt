{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# <center> Lecture 23 &ndash; Pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib\n",
    "from matplotlib import pyplot as plt\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['BooleanDtype',\n",
       " 'Categorical',\n",
       " 'CategoricalDtype',\n",
       " 'CategoricalIndex',\n",
       " 'DataFrame',\n",
       " 'DateOffset',\n",
       " 'DatetimeIndex',\n",
       " 'DatetimeTZDtype',\n",
       " 'ExcelFile',\n",
       " 'ExcelWriter',\n",
       " 'Flags',\n",
       " 'Float32Dtype',\n",
       " 'Float64Dtype',\n",
       " 'Float64Index',\n",
       " 'Grouper',\n",
       " 'HDFStore',\n",
       " 'Index',\n",
       " 'IndexSlice',\n",
       " 'Int16Dtype',\n",
       " 'Int32Dtype',\n",
       " 'Int64Dtype',\n",
       " 'Int64Index',\n",
       " 'Int8Dtype',\n",
       " 'Interval',\n",
       " 'IntervalDtype',\n",
       " 'IntervalIndex',\n",
       " 'MultiIndex',\n",
       " 'NA',\n",
       " 'NaT',\n",
       " 'NamedAgg',\n",
       " 'Period',\n",
       " 'PeriodDtype',\n",
       " 'PeriodIndex',\n",
       " 'RangeIndex',\n",
       " 'Series',\n",
       " 'SparseDtype',\n",
       " 'StringDtype',\n",
       " 'Timedelta',\n",
       " 'TimedeltaIndex',\n",
       " 'Timestamp',\n",
       " 'UInt16Dtype',\n",
       " 'UInt32Dtype',\n",
       " 'UInt64Dtype',\n",
       " 'UInt64Index',\n",
       " 'UInt8Dtype',\n",
       " '__all__',\n",
       " '__builtins__',\n",
       " '__cached__',\n",
       " '__deprecated_num_index_names',\n",
       " '__dir__',\n",
       " '__doc__',\n",
       " '__docformat__',\n",
       " '__file__',\n",
       " '__getattr__',\n",
       " '__git_version__',\n",
       " '__loader__',\n",
       " '__name__',\n",
       " '__package__',\n",
       " '__path__',\n",
       " '__spec__',\n",
       " '__version__',\n",
       " '_config',\n",
       " '_is_numpy_dev',\n",
       " '_libs',\n",
       " '_testing',\n",
       " '_typing',\n",
       " '_version',\n",
       " 'api',\n",
       " 'array',\n",
       " 'arrays',\n",
       " 'bdate_range',\n",
       " 'compat',\n",
       " 'concat',\n",
       " 'core',\n",
       " 'crosstab',\n",
       " 'cut',\n",
       " 'date_range',\n",
       " 'describe_option',\n",
       " 'errors',\n",
       " 'eval',\n",
       " 'factorize',\n",
       " 'get_dummies',\n",
       " 'get_option',\n",
       " 'infer_freq',\n",
       " 'interval_range',\n",
       " 'io',\n",
       " 'isna',\n",
       " 'isnull',\n",
       " 'json_normalize',\n",
       " 'lreshape',\n",
       " 'melt',\n",
       " 'merge',\n",
       " 'merge_asof',\n",
       " 'merge_ordered',\n",
       " 'notna',\n",
       " 'notnull',\n",
       " 'offsets',\n",
       " 'option_context',\n",
       " 'options',\n",
       " 'pandas',\n",
       " 'period_range',\n",
       " 'pivot',\n",
       " 'pivot_table',\n",
       " 'plotting',\n",
       " 'qcut',\n",
       " 'read_clipboard',\n",
       " 'read_csv',\n",
       " 'read_excel',\n",
       " 'read_feather',\n",
       " 'read_fwf',\n",
       " 'read_gbq',\n",
       " 'read_hdf',\n",
       " 'read_html',\n",
       " 'read_json',\n",
       " 'read_orc',\n",
       " 'read_parquet',\n",
       " 'read_pickle',\n",
       " 'read_sas',\n",
       " 'read_spss',\n",
       " 'read_sql',\n",
       " 'read_sql_query',\n",
       " 'read_sql_table',\n",
       " 'read_stata',\n",
       " 'read_table',\n",
       " 'read_xml',\n",
       " 'reset_option',\n",
       " 'set_eng_float_format',\n",
       " 'set_option',\n",
       " 'show_versions',\n",
       " 'test',\n",
       " 'testing',\n",
       " 'timedelta_range',\n",
       " 'to_datetime',\n",
       " 'to_numeric',\n",
       " 'to_pickle',\n",
       " 'to_timedelta',\n",
       " 'tseries',\n",
       " 'unique',\n",
       " 'util',\n",
       " 'value_counts',\n",
       " 'wide_to_long']"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dir(pd)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Reading and writing csv's with Pandas"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We will look at the famed Iris data set. This data set has been studied for many years by people doing machine learning. In fact the dataset was first treated by statistician R.A. Fisher, pictured below.\n",
    "\n",
    "![R.A. Fisher](Fisher.jpg)\n",
    "\n",
    "We chose this dataset because it is well studied but also well known to be non-trivial to get good answers from it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1. Title: Iris Plants Database\n",
      "\tUpdated Sept 21 by C.Blake - Added discrepency information\n",
      "\n",
      "2. Sources:\n",
      "     (a) Creator: R.A. Fisher\n",
      "     (b) Donor: Michael Marshall (MARSHALL%PLU@io.arc.nasa.gov)\n",
      "     (c) Date: July, 1988\n",
      "\n",
      "3. Past Usage:\n",
      "   - Publications: too many to mention!!!  Here are a few.\n",
      "   1. Fisher,R.A. \"The use of multiple measurements in taxonomic problems\"\n",
      "      Annual Eugenics, 7, Part II, 179-188 (1936); also in \"Contributions\n",
      "      to Mathematical Statistics\" (John Wiley, NY, 1950).\n",
      "   2. Duda,R.O., & Hart,P.E. (1973) Pattern Classification and Scene Analysis.\n",
      "      (Q327.D83) John Wiley & Sons.  ISBN 0-471-22361-1.  See page 218.\n",
      "   3. Dasarathy, B.V. (1980) \"Nosing Around the Neighborhood: A New System\n",
      "      Structure and Classification Rule for Recognition in Partially Exposed\n",
      "      Environments\".  IEEE Transactions on Pattern Analysis and Machine\n",
      "      Intelligence, Vol. PAMI-2, No. 1, 67-71.\n",
      "      -- Results:\n",
      "         -- very low misclassification rates (0% for the setosa class)\n",
      "   4. Gates, G.W. (1972) \"The Reduced Nearest Neighbor Rule\".  IEEE \n",
      "      Transactions on Information Theory, May 1972, 431-433.\n",
      "      -- Results:\n",
      "         -- very low misclassification rates again\n",
      "   5. See also: 1988 MLC Proceedings, 54-64.  Cheeseman et al's AUTOCLASS II\n",
      "      conceptual clustering system finds 3 classes in the data.\n",
      "\n",
      "4. Relevant Information:\n",
      "   --- This is perhaps the best known database to be found in the pattern\n",
      "       recognition literature.  Fisher's paper is a classic in the field\n",
      "       and is referenced frequently to this day.  (See Duda & Hart, for\n",
      "       example.)  The data set contains 3 classes of 50 instances each,\n",
      "       where each class refers to a type of iris plant.  One class is\n",
      "       linearly separable from the other 2; the latter are NOT linearly\n",
      "       separable from each other.\n",
      "   --- Predicted attribute: class of iris plant.\n",
      "   --- This is an exceedingly simple domain.\n",
      "   --- This data differs from the data presented in Fishers article\n",
      "\t(identified by Steve Chadwick,  spchadwick@espeedaz.net )\n",
      "\tThe 35th sample should be: 4.9,3.1,1.5,0.2,\"Iris-setosa\"\n",
      "\twhere the error is in the fourth feature.\n",
      "\tThe 38th sample: 4.9,3.6,1.4,0.1,\"Iris-setosa\"\n",
      "\twhere the errors are in the second and third features.  \n",
      "\n",
      "5. Number of Instances: 150 (50 in each of three classes)\n",
      "\n",
      "6. Number of Attributes: 4 numeric, predictive attributes and the class\n",
      "\n",
      "7. Attribute Information:\n",
      "   1. sepal length in cm\n",
      "   2. sepal width in cm\n",
      "   3. petal length in cm\n",
      "   4. petal width in cm\n",
      "   5. class: \n",
      "      -- Iris Setosa\n",
      "      -- Iris Versicolour\n",
      "      -- Iris Virginica\n",
      "\n",
      "8. Missing Attribute Values: None\n",
      "\n",
      "Summary Statistics:\n",
      "\t         Min  Max   Mean    SD   Class Correlation\n",
      "   sepal length: 4.3  7.9   5.84  0.83    0.7826   \n",
      "    sepal width: 2.0  4.4   3.05  0.43   -0.4194\n",
      "   petal length: 1.0  6.9   3.76  1.76    0.9490  (high!)\n",
      "    petal width: 0.1  2.5   1.20  0.76    0.9565  (high!)\n",
      "\n",
      "9. Class Distribution: 33.3% for each of 3 classes.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(open('iris.names', 'r').read())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5.1,3.5,1.4,0.2,Iris-setosa\n",
      "4.9,3.0,1.4,0.2,Iris-setosa\n",
      "4.7,3.2,1.3,0.2,Iris-setosa\n",
      "4.6,3.1,1.5,0.2,Iris-setosa\n",
      "5.0,3.6,1.4,0.2,Iris-setosa\n",
      "5.4,3.9,1.7,0.4,Iris-setosa\n",
      "4.6,3.4,1.4,0.3,Iris-setosa\n",
      "5.0,3.4,1.5,0.2,Iris-setosa\n",
      "4.4,2.9,1.4,0.2,Iris-setosa\n",
      "4.9,3.1,1.5,0.1,Iris-setosa\n",
      "5.4,3.7,1.5,0.2,Iris-setosa\n",
      "4.8,3.4,1.6,0.2,Iris-setosa\n",
      "4.8,3.0,1.4,0.1,Iris-setosa\n",
      "4.3,3.0,1.1,0.1,Iris-setosa\n",
      "5.8,4.0,1.2,0.2,Iris-setosa\n",
      "5.7,4.4,1.5,0.4,Iris-setosa\n",
      "5.4,3.9,1.3,0.4,Iris-setosa\n",
      "5.1,3.5,1.4,0.3,Iris-setosa\n",
      "5.7,3.8,1.7,0.3,Iris-setosa\n",
      "5.1,3.8,1.5,0.3,Iris-setosa\n",
      "5.4,3.4,1.7,0.2,Iris-setosa\n",
      "5.1,3.7,1.5,0.4,Iris-setosa\n",
      "4.6,3.6,1.0,0.2,Iris-setosa\n",
      "5.1,3.3,1.7,0.5,Iris-setosa\n",
      "4.8,3.4,1.9,0.2,Iris-setosa\n",
      "5.0,3.0,1.6,0.2,Iris-setosa\n",
      "5.0,3.4,1.6,0.4,Iris-setosa\n",
      "5.2,3.5,1.5,0.2,Iris-setosa\n",
      "5.2,3.4,1.4,0.2,Iris-setosa\n",
      "4.7,3.2,1.6,0.2,Iris-setosa\n",
      "4.8,3.1,1.6,0.2,Iris-setosa\n",
      "5.4,3.4,1.5,0.4,Iris-setosa\n",
      "5.2,4.1,1.5,0.1,Iris-setosa\n",
      "5.5,4.2,1.4,0.2,Iris-setosa\n",
      "4.9,3.1,1.5,0.1,Iris-setosa\n",
      "5.0,3.2,1.2,0.2,Iris-setosa\n",
      "5.5,3.5,1.3,0.2,Iris-setosa\n",
      "4.9,3.1,1.5,0.1,Iris-setosa\n",
      "4.4,3.0,1.3,0.2,Iris-setosa\n",
      "5.1,3.4,1.5,0.2,Iris-setosa\n",
      "5.0,3.5,1.3,0.3,Iris-setosa\n",
      "4.5,2.3,1.3,0.3,Iris-setosa\n",
      "4.4,3.2,1.3,0.2,Iris-setosa\n",
      "5.0,3.5,1.6,0.6,Iris-setosa\n",
      "5.1,3.8,1.9,0.4,Iris-setosa\n",
      "4.8,3.0,1.4,0.3,Iris-setosa\n",
      "5.1,3.8,1.6,0.2,Iris-setosa\n",
      "4.6,3.2,1.4,0.2,Iris-setosa\n",
      "5.3,3.7,1.5,0.2,Iris-setosa\n",
      "5.0,3.3,1.4,0.2,Iris-setosa\n",
      "7.0,3.2,4.7,1.4,Iris-versicolor\n",
      "6.4,3.2,4.5,1.5,Iris-versicolor\n",
      "6.9,3.1,4.9,1.5,Iris-versicolor\n",
      "5.5,2.3,4.0,1.3,Iris-versicolor\n",
      "6.5,2.8,4.6,1.5,Iris-versicolor\n",
      "5.7,2.8,4.5,1.3,Iris-versicolor\n",
      "6.3,3.3,4.7,1.6,Iris-versicolor\n",
      "4.9,2.4,3.3,1.0,Iris-versicolor\n",
      "6.6,2.9,4.6,1.3,Iris-versicolor\n",
      "5.2,2.7,3.9,1.4,Iris-versicolor\n",
      "5.0,2.0,3.5,1.0,Iris-versicolor\n",
      "5.9,3.0,4.2,1.5,Iris-versicolor\n",
      "6.0,2.2,4.0,1.0,Iris-versicolor\n",
      "6.1,2.9,4.7,1.4,Iris-versicolor\n",
      "5.6,2.9,3.6,1.3,Iris-versicolor\n",
      "6.7,3.1,4.4,1.4,Iris-versicolor\n",
      "5.6,3.0,4.5,1.5,Iris-versicolor\n",
      "5.8,2.7,4.1,1.0,Iris-versicolor\n",
      "6.2,2.2,4.5,1.5,Iris-versicolor\n",
      "5.6,2.5,3.9,1.1,Iris-versicolor\n",
      "5.9,3.2,4.8,1.8,Iris-versicolor\n",
      "6.1,2.8,4.0,1.3,Iris-versicolor\n",
      "6.3,2.5,4.9,1.5,Iris-versicolor\n",
      "6.1,2.8,4.7,1.2,Iris-versicolor\n",
      "6.4,2.9,4.3,1.3,Iris-versicolor\n",
      "6.6,3.0,4.4,1.4,Iris-versicolor\n",
      "6.8,2.8,4.8,1.4,Iris-versicolor\n",
      "6.7,3.0,5.0,1.7,Iris-versicolor\n",
      "6.0,2.9,4.5,1.5,Iris-versicolor\n",
      "5.7,2.6,3.5,1.0,Iris-versicolor\n",
      "5.5,2.4,3.8,1.1,Iris-versicolor\n",
      "5.5,2.4,3.7,1.0,Iris-versicolor\n",
      "5.8,2.7,3.9,1.2,Iris-versicolor\n",
      "6.0,2.7,5.1,1.6,Iris-versicolor\n",
      "5.4,3.0,4.5,1.5,Iris-versicolor\n",
      "6.0,3.4,4.5,1.6,Iris-versicolor\n",
      "6.7,3.1,4.7,1.5,Iris-versicolor\n",
      "6.3,2.3,4.4,1.3,Iris-versicolor\n",
      "5.6,3.0,4.1,1.3,Iris-versicolor\n",
      "5.5,2.5,4.0,1.3,Iris-versicolor\n",
      "5.5,2.6,4.4,1.2,Iris-versicolor\n",
      "6.1,3.0,4.6,1.4,Iris-versicolor\n",
      "5.8,2.6,4.0,1.2,Iris-versicolor\n",
      "5.0,2.3,3.3,1.0,Iris-versicolor\n",
      "5.6,2.7,4.2,1.3,Iris-versicolor\n",
      "5.7,3.0,4.2,1.2,Iris-versicolor\n",
      "5.7,2.9,4.2,1.3,Iris-versicolor\n",
      "6.2,2.9,4.3,1.3,Iris-versicolor\n",
      "5.1,2.5,3.0,1.1,Iris-versicolor\n",
      "5.7,2.8,4.1,1.3,Iris-versicolor\n",
      "6.3,3.3,6.0,2.5,Iris-virginica\n",
      "5.8,2.7,5.1,1.9,Iris-virginica\n",
      "7.1,3.0,5.9,2.1,Iris-virginica\n",
      "6.3,2.9,5.6,1.8,Iris-virginica\n",
      "6.5,3.0,5.8,2.2,Iris-virginica\n",
      "7.6,3.0,6.6,2.1,Iris-virginica\n",
      "4.9,2.5,4.5,1.7,Iris-virginica\n",
      "7.3,2.9,6.3,1.8,Iris-virginica\n",
      "6.7,2.5,5.8,1.8,Iris-virginica\n",
      "7.2,3.6,6.1,2.5,Iris-virginica\n",
      "6.5,3.2,5.1,2.0,Iris-virginica\n",
      "6.4,2.7,5.3,1.9,Iris-virginica\n",
      "6.8,3.0,5.5,2.1,Iris-virginica\n",
      "5.7,2.5,5.0,2.0,Iris-virginica\n",
      "5.8,2.8,5.1,2.4,Iris-virginica\n",
      "6.4,3.2,5.3,2.3,Iris-virginica\n",
      "6.5,3.0,5.5,1.8,Iris-virginica\n",
      "7.7,3.8,6.7,2.2,Iris-virginica\n",
      "7.7,2.6,6.9,2.3,Iris-virginica\n",
      "6.0,2.2,5.0,1.5,Iris-virginica\n",
      "6.9,3.2,5.7,2.3,Iris-virginica\n",
      "5.6,2.8,4.9,2.0,Iris-virginica\n",
      "7.7,2.8,6.7,2.0,Iris-virginica\n",
      "6.3,2.7,4.9,1.8,Iris-virginica\n",
      "6.7,3.3,5.7,2.1,Iris-virginica\n",
      "7.2,3.2,6.0,1.8,Iris-virginica\n",
      "6.2,2.8,4.8,1.8,Iris-virginica\n",
      "6.1,3.0,4.9,1.8,Iris-virginica\n",
      "6.4,2.8,5.6,2.1,Iris-virginica\n",
      "7.2,3.0,5.8,1.6,Iris-virginica\n",
      "7.4,2.8,6.1,1.9,Iris-virginica\n",
      "7.9,3.8,6.4,2.0,Iris-virginica\n",
      "6.4,2.8,5.6,2.2,Iris-virginica\n",
      "6.3,2.8,5.1,1.5,Iris-virginica\n",
      "6.1,2.6,5.6,1.4,Iris-virginica\n",
      "7.7,3.0,6.1,2.3,Iris-virginica\n",
      "6.3,3.4,5.6,2.4,Iris-virginica\n",
      "6.4,3.1,5.5,1.8,Iris-virginica\n",
      "6.0,3.0,4.8,1.8,Iris-virginica\n",
      "6.9,3.1,5.4,2.1,Iris-virginica\n",
      "6.7,3.1,5.6,2.4,Iris-virginica\n",
      "6.9,3.1,5.1,2.3,Iris-virginica\n",
      "5.8,2.7,5.1,1.9,Iris-virginica\n",
      "6.8,3.2,5.9,2.3,Iris-virginica\n",
      "6.7,3.3,5.7,2.5,Iris-virginica\n",
      "6.7,3.0,5.2,2.3,Iris-virginica\n",
      "6.3,2.5,5.0,1.9,Iris-virginica\n",
      "6.5,3.0,5.2,2.0,Iris-virginica\n",
      "6.2,3.4,5.4,2.3,Iris-virginica\n",
      "5.9,3.0,5.1,1.8,Iris-virginica\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(open('iris.data', 'r').read())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![An Iris](iris.jpg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "#data = pd.read_csv('iris.data')\n",
    "data = pd.read_csv('iris.data',header=None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>6.7</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>2.3</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>6.3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>6.2</td>\n",
       "      <td>3.4</td>\n",
       "      <td>5.4</td>\n",
       "      <td>2.3</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>5.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>1.8</td>\n",
       "      <td>Iris-virginica</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>150 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       0    1    2    3               4\n",
       "0    5.1  3.5  1.4  0.2     Iris-setosa\n",
       "1    4.9  3.0  1.4  0.2     Iris-setosa\n",
       "2    4.7  3.2  1.3  0.2     Iris-setosa\n",
       "3    4.6  3.1  1.5  0.2     Iris-setosa\n",
       "4    5.0  3.6  1.4  0.2     Iris-setosa\n",
       "..   ...  ...  ...  ...             ...\n",
       "145  6.7  3.0  5.2  2.3  Iris-virginica\n",
       "146  6.3  2.5  5.0  1.9  Iris-virginica\n",
       "147  6.5  3.0  5.2  2.0  Iris-virginica\n",
       "148  6.2  3.4  5.4  2.3  Iris-virginica\n",
       "149  5.9  3.0  5.1  1.8  Iris-virginica\n",
       "\n",
       "[150 rows x 5 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(150, 5)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>Iris-setosa</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     0    1    2    3            4\n",
       "0  5.1  3.5  1.4  0.2  Iris-setosa\n",
       "1  4.9  3.0  1.4  0.2  Iris-setosa\n",
       "2  4.7  3.2  1.3  0.2  Iris-setosa\n",
       "3  4.6  3.1  1.5  0.2  Iris-setosa\n",
       "4  5.0  3.6  1.4  0.2  Iris-setosa"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0            5.1\n",
       "1            3.5\n",
       "2            1.4\n",
       "3            0.2\n",
       "4    Iris-setosa\n",
       "Name: 0, dtype: object"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.iloc[0,:] #iloc stands for index location"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([5.1, 3.5, 1.4, 0.2, 'Iris-setosa'], dtype=object)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.array(data.iloc[0,:])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      5.1\n",
       "1      4.9\n",
       "2      4.7\n",
       "3      4.6\n",
       "4      5.0\n",
       "      ... \n",
       "145    6.7\n",
       "146    6.3\n",
       "147    6.5\n",
       "148    6.2\n",
       "149    5.9\n",
       "Name: 0, Length: 150, dtype: float64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.iloc[:,0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[5.1 3.5 1.4 0.2]\n",
      " [4.9 3.  1.4 0.2]\n",
      " [4.7 3.2 1.3 0.2]\n",
      " [4.6 3.1 1.5 0.2]\n",
      " [5.  3.6 1.4 0.2]\n",
      " [5.4 3.9 1.7 0.4]\n",
      " [4.6 3.4 1.4 0.3]\n",
      " [5.  3.4 1.5 0.2]\n",
      " [4.4 2.9 1.4 0.2]\n",
      " [4.9 3.1 1.5 0.1]\n",
      " [5.4 3.7 1.5 0.2]\n",
      " [4.8 3.4 1.6 0.2]\n",
      " [4.8 3.  1.4 0.1]\n",
      " [4.3 3.  1.1 0.1]\n",
      " [5.8 4.  1.2 0.2]\n",
      " [5.7 4.4 1.5 0.4]\n",
      " [5.4 3.9 1.3 0.4]\n",
      " [5.1 3.5 1.4 0.3]\n",
      " [5.7 3.8 1.7 0.3]\n",
      " [5.1 3.8 1.5 0.3]\n",
      " [5.4 3.4 1.7 0.2]\n",
      " [5.1 3.7 1.5 0.4]\n",
      " [4.6 3.6 1.  0.2]\n",
      " [5.1 3.3 1.7 0.5]\n",
      " [4.8 3.4 1.9 0.2]\n",
      " [5.  3.  1.6 0.2]\n",
      " [5.  3.4 1.6 0.4]\n",
      " [5.2 3.5 1.5 0.2]\n",
      " [5.2 3.4 1.4 0.2]\n",
      " [4.7 3.2 1.6 0.2]\n",
      " [4.8 3.1 1.6 0.2]\n",
      " [5.4 3.4 1.5 0.4]\n",
      " [5.2 4.1 1.5 0.1]\n",
      " [5.5 4.2 1.4 0.2]\n",
      " [4.9 3.1 1.5 0.1]\n",
      " [5.  3.2 1.2 0.2]\n",
      " [5.5 3.5 1.3 0.2]\n",
      " [4.9 3.1 1.5 0.1]\n",
      " [4.4 3.  1.3 0.2]\n",
      " [5.1 3.4 1.5 0.2]\n",
      " [5.  3.5 1.3 0.3]\n",
      " [4.5 2.3 1.3 0.3]\n",
      " [4.4 3.2 1.3 0.2]\n",
      " [5.  3.5 1.6 0.6]\n",
      " [5.1 3.8 1.9 0.4]\n",
      " [4.8 3.  1.4 0.3]\n",
      " [5.1 3.8 1.6 0.2]\n",
      " [4.6 3.2 1.4 0.2]\n",
      " [5.3 3.7 1.5 0.2]\n",
      " [5.  3.3 1.4 0.2]\n",
      " [7.  3.2 4.7 1.4]\n",
      " [6.4 3.2 4.5 1.5]\n",
      " [6.9 3.1 4.9 1.5]\n",
      " [5.5 2.3 4.  1.3]\n",
      " [6.5 2.8 4.6 1.5]\n",
      " [5.7 2.8 4.5 1.3]\n",
      " [6.3 3.3 4.7 1.6]\n",
      " [4.9 2.4 3.3 1. ]\n",
      " [6.6 2.9 4.6 1.3]\n",
      " [5.2 2.7 3.9 1.4]\n",
      " [5.  2.  3.5 1. ]\n",
      " [5.9 3.  4.2 1.5]\n",
      " [6.  2.2 4.  1. ]\n",
      " [6.1 2.9 4.7 1.4]\n",
      " [5.6 2.9 3.6 1.3]\n",
      " [6.7 3.1 4.4 1.4]\n",
      " [5.6 3.  4.5 1.5]\n",
      " [5.8 2.7 4.1 1. ]\n",
      " [6.2 2.2 4.5 1.5]\n",
      " [5.6 2.5 3.9 1.1]\n",
      " [5.9 3.2 4.8 1.8]\n",
      " [6.1 2.8 4.  1.3]\n",
      " [6.3 2.5 4.9 1.5]\n",
      " [6.1 2.8 4.7 1.2]\n",
      " [6.4 2.9 4.3 1.3]\n",
      " [6.6 3.  4.4 1.4]\n",
      " [6.8 2.8 4.8 1.4]\n",
      " [6.7 3.  5.  1.7]\n",
      " [6.  2.9 4.5 1.5]\n",
      " [5.7 2.6 3.5 1. ]\n",
      " [5.5 2.4 3.8 1.1]\n",
      " [5.5 2.4 3.7 1. ]\n",
      " [5.8 2.7 3.9 1.2]\n",
      " [6.  2.7 5.1 1.6]\n",
      " [5.4 3.  4.5 1.5]\n",
      " [6.  3.4 4.5 1.6]\n",
      " [6.7 3.1 4.7 1.5]\n",
      " [6.3 2.3 4.4 1.3]\n",
      " [5.6 3.  4.1 1.3]\n",
      " [5.5 2.5 4.  1.3]\n",
      " [5.5 2.6 4.4 1.2]\n",
      " [6.1 3.  4.6 1.4]\n",
      " [5.8 2.6 4.  1.2]\n",
      " [5.  2.3 3.3 1. ]\n",
      " [5.6 2.7 4.2 1.3]\n",
      " [5.7 3.  4.2 1.2]\n",
      " [5.7 2.9 4.2 1.3]\n",
      " [6.2 2.9 4.3 1.3]\n",
      " [5.1 2.5 3.  1.1]\n",
      " [5.7 2.8 4.1 1.3]\n",
      " [6.3 3.3 6.  2.5]\n",
      " [5.8 2.7 5.1 1.9]\n",
      " [7.1 3.  5.9 2.1]\n",
      " [6.3 2.9 5.6 1.8]\n",
      " [6.5 3.  5.8 2.2]\n",
      " [7.6 3.  6.6 2.1]\n",
      " [4.9 2.5 4.5 1.7]\n",
      " [7.3 2.9 6.3 1.8]\n",
      " [6.7 2.5 5.8 1.8]\n",
      " [7.2 3.6 6.1 2.5]\n",
      " [6.5 3.2 5.1 2. ]\n",
      " [6.4 2.7 5.3 1.9]\n",
      " [6.8 3.  5.5 2.1]\n",
      " [5.7 2.5 5.  2. ]\n",
      " [5.8 2.8 5.1 2.4]\n",
      " [6.4 3.2 5.3 2.3]\n",
      " [6.5 3.  5.5 1.8]\n",
      " [7.7 3.8 6.7 2.2]\n",
      " [7.7 2.6 6.9 2.3]\n",
      " [6.  2.2 5.  1.5]\n",
      " [6.9 3.2 5.7 2.3]\n",
      " [5.6 2.8 4.9 2. ]\n",
      " [7.7 2.8 6.7 2. ]\n",
      " [6.3 2.7 4.9 1.8]\n",
      " [6.7 3.3 5.7 2.1]\n",
      " [7.2 3.2 6.  1.8]\n",
      " [6.2 2.8 4.8 1.8]\n",
      " [6.1 3.  4.9 1.8]\n",
      " [6.4 2.8 5.6 2.1]\n",
      " [7.2 3.  5.8 1.6]\n",
      " [7.4 2.8 6.1 1.9]\n",
      " [7.9 3.8 6.4 2. ]\n",
      " [6.4 2.8 5.6 2.2]\n",
      " [6.3 2.8 5.1 1.5]\n",
      " [6.1 2.6 5.6 1.4]\n",
      " [7.7 3.  6.1 2.3]\n",
      " [6.3 3.4 5.6 2.4]\n",
      " [6.4 3.1 5.5 1.8]\n",
      " [6.  3.  4.8 1.8]\n",
      " [6.9 3.1 5.4 2.1]\n",
      " [6.7 3.1 5.6 2.4]\n",
      " [6.9 3.1 5.1 2.3]\n",
      " [5.8 2.7 5.1 1.9]\n",
      " [6.8 3.2 5.9 2.3]\n",
      " [6.7 3.3 5.7 2.5]\n",
      " [6.7 3.  5.2 2.3]\n",
      " [6.3 2.5 5.  1.9]\n",
      " [6.5 3.  5.2 2. ]\n",
      " [6.2 3.4 5.4 2.3]\n",
      " [5.9 3.  5.1 1.8]]\n",
      "['Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n",
      " 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n",
      " 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n",
      " 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n",
      " 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n",
      " 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n",
      " 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n",
      " 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n",
      " 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n",
      " 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa' 'Iris-setosa'\n",
      " 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n",
      " 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n",
      " 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n",
      " 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n",
      " 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n",
      " 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n",
      " 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n",
      " 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n",
      " 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n",
      " 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n",
      " 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n",
      " 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor' 'Iris-versicolor'\n",
      " 'Iris-versicolor' 'Iris-versicolor' 'Iris-virginica' 'Iris-virginica'\n",
      " 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n",
      " 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n",
      " 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n",
      " 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n",
      " 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n",
      " 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n",
      " 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n",
      " 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n",
      " 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n",
      " 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n",
      " 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica'\n",
      " 'Iris-virginica' 'Iris-virginica' 'Iris-virginica' 'Iris-virginica']\n"
     ]
    }
   ],
   "source": [
    "x = np.array(data.iloc[:, :-1])\n",
    "y = np.array(data.iloc[:, -1])\n",
    "print(x)\n",
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='0', ylabel='1'>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "data.plot(0,1,kind='scatter')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure()\n",
    "plt.plot(x[y=='Iris-setosa',0],x[y=='Iris-setosa',1],'r.')\n",
    "plt.plot(x[y=='Iris-versicolor',0],x[y=='Iris-versicolor',1],'g.')\n",
    "plt.plot(x[y=='Iris-virginica',0],x[y=='Iris-virginica',1],'b.')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure()\n",
    "plt.plot(x[y=='Iris-setosa',0],x[y=='Iris-setosa',2],'r.')\n",
    "plt.plot(x[y=='Iris-versicolor',0],x[y=='Iris-versicolor',2],'g.')\n",
    "plt.plot(x[y=='Iris-virginica',0],x[y=='Iris-virginica',2],'b.')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure()\n",
    "plt.plot(x[y=='Iris-setosa',1],x[y=='Iris-setosa',2],'r.')\n",
    "plt.plot(x[y=='Iris-versicolor',1],x[y=='Iris-versicolor',2],'g.')\n",
    "plt.plot(x[y=='Iris-virginica',1],x[y=='Iris-virginica',2],'b.')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure()\n",
    "plt.plot(x[y=='Iris-setosa',1],x[y=='Iris-setosa',3],'r.')\n",
    "plt.plot(x[y=='Iris-versicolor',1],x[y=='Iris-versicolor',3],'g.')\n",
    "plt.plot(x[y=='Iris-virginica',1],x[y=='Iris-virginica',3],'b.')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure()\n",
    "plt.plot(x[y=='Iris-setosa',2],x[y=='Iris-setosa',3],'r.')\n",
    "plt.plot(x[y=='Iris-versicolor',2],x[y=='Iris-versicolor',3],'g.')\n",
    "plt.plot(x[y=='Iris-virginica',2],x[y=='Iris-virginica',3],'b.')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure()\n",
    "plt.plot(x[y=='Iris-setosa',0],x[y=='Iris-setosa',3],'r.')\n",
    "plt.plot(x[y=='Iris-versicolor',0],x[y=='Iris-versicolor',3],'g.')\n",
    "plt.plot(x[y=='Iris-virginica',0],x[y=='Iris-virginica',3],'b.')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 16 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.plotting.scatter_matrix(data, alpha=0.6, figsize=(10,10)); # dataframe, alpha transparency, figsize is total figure size"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What do we conclude about the 3 classes in this dataset?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.decomposition import PCA  #Principal Component Analysis\n",
    "\n",
    "plt.figure()\n",
    "XPCA = PCA(n_components=3).fit_transform(x)\n",
    "plt.plot(XPCA[y=='Iris-setosa',0],XPCA[y=='Iris-setosa',1],'r.')\n",
    "plt.plot(XPCA[y=='Iris-versicolor',0],XPCA[y=='Iris-versicolor',1],'g.')\n",
    "plt.plot(XPCA[y=='Iris-virginica',0],XPCA[y=='Iris-virginica',1],'b.')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.decomposition import PCA  #Principal Component Analysis\n",
    "\n",
    "plt.figure()\n",
    "XPCA = PCA(n_components=3).fit_transform(x)\n",
    "plt.plot(XPCA[y=='Iris-setosa',0],XPCA[y=='Iris-setosa',2],'r.')\n",
    "plt.plot(XPCA[y=='Iris-versicolor',0],XPCA[y=='Iris-versicolor',2],'g.')\n",
    "plt.plot(XPCA[y=='Iris-virginica',0],XPCA[y=='Iris-virginica',2],'b.')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.decomposition import PCA  #Principal Component Analysis\n",
    "\n",
    "plt.figure()\n",
    "XPCA = PCA(n_components=3).fit_transform(x)\n",
    "plt.plot(XPCA[y=='Iris-setosa',1],XPCA[y=='Iris-setosa',2],'r.')\n",
    "plt.plot(XPCA[y=='Iris-versicolor',1],XPCA[y=='Iris-versicolor',2],'g.')\n",
    "plt.plot(XPCA[y=='Iris-virginica',1],XPCA[y=='Iris-virginica',2],'b.')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "Titanic_df = pd.read_csv('train.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0            1         0       3   \n",
       "1            2         1       1   \n",
       "2            3         1       3   \n",
       "3            4         1       1   \n",
       "4            5         0       3   \n",
       "\n",
       "                                                Name     Sex   Age  SibSp  \\\n",
       "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                           Allen, Mr. William Henry    male  35.0      0   \n",
       "\n",
       "   Parch            Ticket     Fare Cabin Embarked  \n",
       "0      0         A/5 21171   7.2500   NaN        S  \n",
       "1      0          PC 17599  71.2833   C85        C  \n",
       "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3      0            113803  53.1000  C123        S  \n",
       "4      0            373450   8.0500   NaN        S  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Titanic_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     PassengerId  Survived  Pclass                            Name   Sex  \\\n",
      "0              1         0       3         Braund, Mr. Owen Harris  male   \n",
      "4              5         0       3        Allen, Mr. William Henry  male   \n",
      "5              6         0       3                Moran, Mr. James  male   \n",
      "6              7         0       1         McCarthy, Mr. Timothy J  male   \n",
      "7              8         0       3  Palsson, Master. Gosta Leonard  male   \n",
      "..           ...       ...     ...                             ...   ...   \n",
      "883          884         0       2   Banfield, Mr. Frederick James  male   \n",
      "884          885         0       3          Sutehall, Mr. Henry Jr  male   \n",
      "886          887         0       2           Montvila, Rev. Juozas  male   \n",
      "889          890         1       1           Behr, Mr. Karl Howell  male   \n",
      "890          891         0       3             Dooley, Mr. Patrick  male   \n",
      "\n",
      "      Age  SibSp  Parch            Ticket     Fare Cabin Embarked  \n",
      "0    22.0      1      0         A/5 21171   7.2500   NaN        S  \n",
      "4    35.0      0      0            373450   8.0500   NaN        S  \n",
      "5     NaN      0      0            330877   8.4583   NaN        Q  \n",
      "6    54.0      0      0             17463  51.8625   E46        S  \n",
      "7     2.0      3      1            349909  21.0750   NaN        S  \n",
      "..    ...    ...    ...               ...      ...   ...      ...  \n",
      "883  28.0      0      0  C.A./SOTON 34068  10.5000   NaN        S  \n",
      "884  25.0      0      0   SOTON/OQ 392076   7.0500   NaN        S  \n",
      "886  27.0      0      0            211536  13.0000   NaN        S  \n",
      "889  26.0      0      0            111369  30.0000  C148        C  \n",
      "890  32.0      0      0            370376   7.7500   NaN        Q  \n",
      "\n",
      "[577 rows x 12 columns]\n"
     ]
    }
   ],
   "source": [
    "males = Titanic_df[Titanic_df['Sex']=='male']\n",
    "print(males)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(891, 12)\n",
      "(577, 12)\n"
     ]
    }
   ],
   "source": [
    "print(Titanic_df.shape)\n",
    "print(males.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     PassengerId  Survived  Pclass                            Name   Sex  \\\n",
      "0              1         0       3         Braund, Mr. Owen Harris  male   \n",
      "4              5         0       3        Allen, Mr. William Henry  male   \n",
      "5              6         0       3                Moran, Mr. James  male   \n",
      "6              7         0       1         McCarthy, Mr. Timothy J  male   \n",
      "7              8         0       3  Palsson, Master. Gosta Leonard  male   \n",
      "..           ...       ...     ...                             ...   ...   \n",
      "883          884         0       2   Banfield, Mr. Frederick James  male   \n",
      "884          885         0       3          Sutehall, Mr. Henry Jr  male   \n",
      "886          887         0       2           Montvila, Rev. Juozas  male   \n",
      "889          890         1       1           Behr, Mr. Karl Howell  male   \n",
      "890          891         0       3             Dooley, Mr. Patrick  male   \n",
      "\n",
      "      Age  SibSp  Parch            Ticket     Fare Cabin Embarked  \n",
      "0    22.0      1      0         A/5 21171   7.2500   NaN        S  \n",
      "4    35.0      0      0            373450   8.0500   NaN        S  \n",
      "5     NaN      0      0            330877   8.4583   NaN        Q  \n",
      "6    54.0      0      0             17463  51.8625   E46        S  \n",
      "7     2.0      3      1            349909  21.0750   NaN        S  \n",
      "..    ...    ...    ...               ...      ...   ...      ...  \n",
      "883  28.0      0      0  C.A./SOTON 34068  10.5000   NaN        S  \n",
      "884  25.0      0      0   SOTON/OQ 392076   7.0500   NaN        S  \n",
      "886  27.0      0      0            211536  13.0000   NaN        S  \n",
      "889  26.0      0      0            111369  30.0000  C148        C  \n",
      "890  32.0      0      0            370376   7.7500   NaN        Q  \n",
      "\n",
      "[577 rows x 12 columns]\n"
     ]
    }
   ],
   "source": [
    "males2 = Titanic_df.loc[Titanic_df.Sex == 'male']\n",
    "print(males2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0      0\n",
      "4      0\n",
      "5      0\n",
      "6      0\n",
      "7      0\n",
      "      ..\n",
      "883    0\n",
      "884    0\n",
      "886    0\n",
      "889    1\n",
      "890    0\n",
      "Name: Survived, Length: 577, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "male_survival = Titanic_df.loc[Titanic_df.Sex == 'male']['Survived']\n",
    "print(male_survival)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.18890814558058924\n"
     ]
    }
   ],
   "source": [
    "print(sum(male_survival)/len(male_survival))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>1</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>1</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>1</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0            1         0       3   \n",
       "1            2         1       1   \n",
       "2            3         1       3   \n",
       "3            4         1       1   \n",
       "4            5         0       3   \n",
       "\n",
       "                                                Name  Sex   Age  SibSp  Parch  \\\n",
       "0                            Braund, Mr. Owen Harris    0  22.0      1      0   \n",
       "1  Cumings, Mrs. John Bradley (Florence Briggs Th...    1  38.0      1      0   \n",
       "2                             Heikkinen, Miss. Laina    1  26.0      0      0   \n",
       "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)    1  35.0      1      0   \n",
       "4                           Allen, Mr. William Henry    0  35.0      0      0   \n",
       "\n",
       "             Ticket     Fare Cabin Embarked  \n",
       "0         A/5 21171   7.2500   NaN        S  \n",
       "1          PC 17599  71.2833   C85        C  \n",
       "2  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3            113803  53.1000  C123        S  \n",
       "4            373450   8.0500   NaN        S  "
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# replace Sex with numerical value\n",
    "Titanic_df['Sex'].replace(['male','female'],[0,1])#,inplace=True)\n",
    "Titanic_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "a =Titanic_df['Age'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "24.00    30\n",
      "22.00    27\n",
      "18.00    26\n",
      "19.00    25\n",
      "28.00    25\n",
      "         ..\n",
      "36.50     1\n",
      "55.50     1\n",
      "0.92      1\n",
      "23.50     1\n",
      "74.00     1\n",
      "Name: Age, Length: 88, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
